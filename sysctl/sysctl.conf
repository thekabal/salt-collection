# Kernel sysctl configuration file for Red Hat Linux
#
# For binary values, 0 is disabled, 1 is enabled.  See sysctl(8) and
# sysctl.conf(5) for more details.

# Enable IP spoofing protection, turn on source route verification
# Greenplum Changed Value: 1
net.ipv4.conf.default.rp_filter = 1 

# Controls the maximum shared segment size, in bytes
kernel.shmmax = 500000000

# Controls the maxiumum number of shared memory segments, system wide
kernel.shmmni = 4096 

# Controls the maximum number of shared memory segments, in pages
kernel.shmall = 4294967296

# Controls kernel semaphores: SEMMSL, SEMMNS, SEMOPM SEMM
# Greenplum Changed Value: 250 512000 100 2048
kernel.sem = 250 512000 100 2048 

# Controls the System Request debugging functionality of the kernel
# Greenplum Changed Value: 1
kernel.sysrq = 1 

# Controls whether core dumps will append the PID to the core filename
# Useful for debugging multi-threaded applications
kernel.core_uses_pid = 1 

# Controls the maximum size of a message, in bytes
kernel.msgmnb = 65536 

# Controls the default maxmimum size of a mesage queue
kernel.msgmax = 65536

# Controls the number of message queue identifiers
# Greenplum Changed Value:  2048
kernel.msgmni = 2048 

# Controls the use of TCP syncookies
net.ipv4.tcp_syncookies = 1 

# Controls IP packet forwarding
net.ipv4.ip_forward = 0 

# Do not accept source routing
net.ipv4.conf.default.accept_source_route = 0 

# This allows fast recycling of sockets which are in the TIME_WAIT state 
# even if it is not safe from a protocol perspective. You should not use 
# this in a production environment. It can cause issues with loadbalancers 
# and other mayhem.
# Greenplum changed value: 1
net.ipv4.tcp_tw_recycle = 1

# Controls maximum number of remembered connection requests, which have 
# not received an acknowledgment from connecting client
# Greenplum Changed Value: 4096
net.ipv4.tcp_max_syn_backlog = 4096 

# Allows you to have multiple network interfaces on the same subnet, and 
# have the ARPs for each interface be answered based on whether or not the 
# kernel would route a packet from the ARP'd IP out that interface 
# (therefore you must use source based routing for this to work). In other 
# words it allows control of which cards (usually 1) will respond to an ARP 
# request.
# Greenplum Changed Value: 1
net.ipv4.conf.all.arp_filter = 1 

# Controls the maximum number of outbound sockets a host can create from a 
# particular IP address.
# Greenplum Changed Value:  1025 65535
net.ipv4.ip_local_port_range = 1025 65535 

# Controls the maximum number of packets, queued on the input side, when the 
# interface receives packets faster than kernel can process them. Applies to 
# non-NAPI devices only
# Greenplum Changed Value: 10000
net.core.netdev_max_backlog = 10000 

# Controls overcommit of system memory, possibly allowing processes to allocate 
# (but not use) more memory than is actually available.
# 2 - Don't overcommit. The total address space commit for the system is not 
# permitted to exceed swap plus a configurable percentage (default is 50) of 
# physical RAM. Depending on the percentage you use, in most situations this 
# means a process will not be killed while attempting to use already-allocated 
# memory but will receive errors on memory allocation as appropriate.
# Greenplum Changed Value:  2
vm.overcommit_memory = 2

net.core.rmem_max = 2097152
net.core.wmem_max = 2097152
